import re

def label_text_ignore_case_regex(text, name):
    # Prepare the regex pattern for the name, escaping special characters and ignoring case
    name_pattern = re.compile(re.escape(name.strip()), re.IGNORECASE)
    
    # Split the text into words
    words = text.split()
    
    # Initialize an empty list to store the labels
    labels = [0] * len(words)
    
    # Find all matches of the name pattern in the text
    matches = list(name_pattern.finditer(text))
    
    # Iterate over the matches and update the labels
    for match in matches:
        # Determine the start and end positions of the match in words
        start_pos = len(text[:match.start()].split())
        name_length = len(name.split())
        for i in range(start_pos, start_pos + name_length):
            if i < len(labels):
                labels[i] = 1
    
    return list(zip(words, labels))

# Example usage
text = "John Doe went to the market. john met with Jane doe."
name = "John doe"

labeled_text = label_text_ignore_case_regex(text, name)
print(labeled_text)
